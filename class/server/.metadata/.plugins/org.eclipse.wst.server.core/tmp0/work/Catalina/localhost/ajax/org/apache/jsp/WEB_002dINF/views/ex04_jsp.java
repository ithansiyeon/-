/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.56
 * Generated at: 2020-08-11 02:52:12 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ex04_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/ajax/css/bootstrap.css\">\r\n");
      out.write("<script src=\"/ajax/js/jquery-1.12.4.js\"></script>\r\n");
      out.write("<script src=\"/ajax/js/bootstrap.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write(".container {\r\n");
      out.write("\twidth: 900px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<!--  -->\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h1>Ajax 응답 데이터</h1>\r\n");
      out.write("\r\n");
      out.write("\t\t<h2>Text</h2>\r\n");
      out.write("\t\t<button tyep=\"button\" id=\"btn1\">클릭</button>\r\n");
      out.write("\t\t<div id=\"result1\" class=\"well\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<h2>XML</h2>\r\n");
      out.write("\t\t<button tyep=\"button\" id=\"btn2\">클릭</button>\r\n");
      out.write("\t\t<div id=\"result2\" class=\"well\"></div>\r\n");
      out.write("\r\n");
      out.write("\t\t<h2>JSON</h2>\r\n");
      out.write("\t\t<button tyep=\"button\" id=\"btn3\">클릭</button>\r\n");
      out.write("\t\t<div id=\"result3\" class=\"well\"></div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- 데이터가 적으면 get -->\r\n");
      out.write("\t<!-- text는 데이터가 많으면 불편, 받아써 쓰는 입장에서 불편 -->\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$(\"#btn1\").click(function(){\r\n");
      out.write("\t\t\t//ajax -> 전송 데이터(X), 수신 데이터(O)\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t//요청 정보\r\n");
      out.write("\t\t\t\ttype: \"GET\",  \r\n");
      out.write("\t\t\t\turl: \"/ajax/ex04ok.do\",\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//전송 데이터\r\n");
      out.write("\t\t\t\tdata:\"type=4\",\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//수신 데이터의 형식\r\n");
      out.write("\t\t\t\tdataType:\"text\",\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//수신 데이터, result 안에 들어옴\r\n");
      out.write("\t\t\t\tsuccess: function(result){\r\n");
      out.write("\t\t\t\t\t//$(\"#result1\").text(result);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tvar lines = result.split(\"\\n\");\r\n");
      out.write("\t\t\t\t\tlines.forEach(function(item,index){\r\n");
      out.write("\t\t\t\t\t\t//console.log(item);\r\n");
      out.write("\t\t\t\t\t\tvar column = item.split(\",\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#result1\").append(\"<div>(\"+column[0]+\")\" + column[1] + \"[\" + column[2]+\"]</div>\");\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t//예외 처리\r\n");
      out.write("\t\t\t\terror:function(a,b,c){\r\n");
      out.write("\t\t\t\t\tconsole.log(a,b,c);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//다량의 데이터 일수록 구조화된게 접근성이 쉬워 xml,json을 주로 씀, ajax는 데이터를 xml 형태로 주고 받음 => ajax 주로 json\r\n");
      out.write("\t\t$(\"#btn2\").click(function(){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"GET\",  \r\n");
      out.write("\t\t\t\turl: \"/ajax/ex04ok.do\",\t\r\n");
      out.write("\t\t\t\tdata:\"type=5\",\r\n");
      out.write("\t\t\t\tdataType:\"xml\",\t//받는 데이터\t\r\n");
      out.write("\t\t\t\tsuccess: function(result){\r\n");
      out.write("\t\t\t\t\t//result -> 단순 데이터(X) , XML Document 객체, xml 전부다 가지고 있는 \r\n");
      out.write("\t\t\t\t\t//$(\"#result2\").text($(result).find(\"item\").text());\r\n");
      out.write("\t\t\t\t\t$(result).find(\"item\").each(function(index,item){\r\n");
      out.write("\t\t\t\t\t\t\t//<item>\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#result2\").append(\"<div>\"+$(item).find(\"seq\").text()+\".\"+$(item).find(\"subject\").text()+\"</div>\");\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror:function(a,b,c){\r\n");
      out.write("\t\t\t\t\tconsole.log(a,b,c);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t$(\"#btn3\").click(function(){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype: \"GET\",  \r\n");
      out.write("\t\t\t\turl: \"/ajax/ex04ok.do\",\t\r\n");
      out.write("\t\t\t\tdata:\"type=6\",\r\n");
      out.write("\t\t\t\tdataType:\"json\",\t//받는 데이터\t\r\n");
      out.write("\t\t\t\tsuccess: function(result){\r\n");
      out.write("\t\t\t\t\t//result = {\"result\":\"111\"};\r\n");
      out.write("\t\t\t\t\t//$(\"#result3\").text(result.result);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t//result = [{},{},{}]\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(result).each(function(index,item){\r\n");
      out.write("\t\t\t\t\t\t//item.seq\r\n");
      out.write("\t\t\t\t\t\t//item.subject\r\n");
      out.write("\t\t\t\t\t\t//item.regdates\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t$(\"#result3\").append(\"<div>\" + item.subject + \"</div>\")\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror:function(a,b,c){\r\n");
      out.write("\t\t\t\t\tconsole.log(a,b,c);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
